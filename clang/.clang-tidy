---
Checks: "
  clang-diagnostic-*,
  -clang-diagnostic-implicit-int-float-conversion,
  bugprone-*,
  -bugprone-too-small-loop-variable,
  -bugprone-easily-swappable-parameters,
  -bugprone-branch-clone,
  -bugprone-signed-char-misuse,
  -bugprone-unhandled-self-assignment,
  cert-*,
  clang-analyzer-*,
  -clang-analyzer-cplusplus.NewDelete,
  -clang-analyzer-cplusplus.NewDeleteLeaks,
  concurrency-*,
  cppcoreguidelines-*,
  -cppcoreguidelines-avoid-magic-numbers,
  google-*,
  -google-objc-*,
  misc-*,
  modernize-*,
  -modernize-use-nodiscard,
  -modernize-avoid-c-arrays,
  -modernize-use-auto,
  -modernize-use-trailing-return-type,
  performance-*,
  portability-*,
  readability-*,
  -readability-convert-member-functions-to-static,
  -readability-magic-numbers,
  -readability-make-member-function-const,
  -readability-qualified-auto,
  -readability-redundant-access-specifiers,
  "

CheckOptions:
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.EnumCase, value: CamelCase }
  - { key: readability-identifier-naming.FunctionCase, value: CamelCase }
  - { key: readability-identifier-naming.GlobalConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.MemberCase, value: lower_case }
  - { key: readability-identifier-naming.MemberSuffix, value: _ }
  - { key: readability-identifier-naming.NamespaceCase, value: lower_case }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.UnionCase, value: CamelCase }
  - { key: readability-identifier-naming.VariableCase, value: lower_case }
  - { key: readability-function-cognitive-complexity.IgnoreMacros, value: true }

# WarningsAsErrors: '*'

HeaderFilterRegex: "/(src|test)/include"
AnalyzeTemporaryDtors: true
